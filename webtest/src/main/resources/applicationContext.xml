<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
  	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
    <context:annotation-config />
    
<!-- 
	<context:annotation-config />

    <context:property-placeholder location="classpath:config.properties"/>
    
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    
    <ldap:context-source id="contextSource"
                         url="${ldap.url}"
                         username="${ldap.userDn}"
                         password="${ldap.password}" />

    <ldap:ldap-template id="ldapTemplate" context-source-ref="contextSource"/>
    
    <bean id="csaRepo" class="com.hp.ecs.userMapping.csa.CsaRepoImpl"/>

    <bean id="vpcDao" class="com.hp.ecs.userMapping.vpc.VpcDaoImpl">
        <property name="dataSource" ref="dataSource"/>
    </bean>    
   
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="org.sqlite.JDBC"/>
        <property name="url" value="jdbc:sqlite:saratoga.db"/>
        <property name="username" value="randy"/>
        <property name="password" value="randy"/>
    </bean>
    
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">  
		<property name="dataSource" ref="dataSource"/>
    </bean>
-->

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="org.sqlite.JDBC" />
		<property name="url" value="jdbc:sqlite:saratoga.db" />
		<property name="username" value="randy" />
		<property name="password" value="randy" />
	</bean>
    
    <!-- 定义Hibernate的SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean" >
		<!-- mappingResouces属性用来列出全部映射文件 -->
		<property name="dataSource">
            <ref bean="dataSource" />
        </property>
		<property name="mappingResources">
			<list>
				<!-- 以下用来列出Hibernate映射文件 -->
				<value>Orgnization.hbm.xml</value>
				<!-- ... -->
			</list>
		</property>
		<!-- 定义Hibernate的SessionFactory的属性 -->
		<property name="hibernateProperties">
			<!-- 指定数据库方言、是否自动建表 是否生成SQL语句等 -->
			<value>
				hibernate.dialect=framework.SQLiteDialect
				hibernate.hbm2ddl.auto=update
				hibernate.show_sql=true
				hibernate.format_sql=true
			</value>
		</property>
	</bean>
	
	<!-- 配置DAO组件的模板 -->
	<bean id="daoTemplate" abstract="true" lazy-init="true"
		p:sessionFactory-ref="sessionFactory" />

	<bean id="orgDAO" class="dao.impl.OrgnizationDAOImpl" parent="daoTemplate" />

	<bean id="page" class="framework.HibernatePage" parent="daoTemplate" />
    
    <bean class="resteasy.RESTService"/>

	
</beans>